Checks: '
  clang-diagnostic-*,
  clang-analyzer-*,
  cppcoreguidelines-*,
  modernize-*,
  performance-*,
  readability-*,
  misc-*,
  llvm-*,
  bugprone-*,

  -modernize-use-trailing-return-type,
  -cppcoreguidelines-special-member-functions,
  -readability-braces-around-statements,
  -cppcoreguidelines-pro-type-union-access,
  -readability-identifier-length,
  -readability-magic-numbers,
  -bugprone-easily-swappable-parameters,
  -cppcoreguidelines-avoid-magic-numbers,
  -misc-non-private-member-variables-in-classes,
  -cppcoreguidelines-non-private-member-variables-in-classes
  -cppcoreguidelines-pro-bounds-pointer-arithmetic
'
CheckOptions:
  - { key: readability-identifier-naming.DefaultCase,         value: camelBack  }
  - { key: readability-identifier-naming.MacroDefinitionCase, value: UPPER_CASE  }
  - { key: readability-identifier-naming.GlobalConstantCase,  value: UPPER_CASE  }
  - { key: readability-identifier-naming.NamespaceCase,       value: CamelCase }
  - { key: readability-identifier-naming.ClassCase,           value: CamelCase  }
  - { key: readability-identifier-naming.StructCase,          value: CamelCase  }
  - { key: readability-identifier-naming.MethodCase,          value: CamelCase  }
  - { key: readability-identifier-naming.FunctionCase,        value: CamelCase  }
  - { key: readability-identifier-naming.MemberCase,          value: CamelCase  }
  - { key: readability-identifier-naming.PrivateMemberCase,   value: camelBack  }
  - { key: readability-identifier-naming.PrivateMemberPrefix, value: _         }
  - { key: readability-identifier-naming.VariableCase,        value: camelBack }
  - { key: readability-identifier-naming.ParameterCase,       value: camelBack }
  - { key: readability-function-cognitive-complexity.Threshold,       value: 30 }

WarningsAsErrors: '*'
HeaderFilterRegex: '.*hpp$'